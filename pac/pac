#!/usr/bin/env bash
AUR_LIST=$HOME/.cache/aur-list.txt
AUR_HELPER=/usr/bin/yay

usage() {
  LESS=-FEXR less <<HELP
    pac [options] [query]
    pac install, in <packagename>       - Installs a package. You can use both main and AUR packages.
    pac remove, rm <packagename>        - Removes a package.
    pac aur, a <packagename>           - Installs a package from the AUR. Use this if install doesn't work for an AUR package.
    pac aur-sync, as <packagename>     - Updates AUR package list
    pac update, up <packagename>        - Updates All packages

HELP
}

aursync(){
    printf ":: Refresing AUR package list...\n";
    curl --output - "https://aur.archlinux.org/packages.gz" 2> /dev/null | gzip -d > "$AUR_LIST";
}

aur() {
    if [[ ! -e $AUR_LIST ]]; then
        aursync;
    fi

    if (( $# > 0 )); then
      $AUR_HELPER -S "$@"
      exit
    fi

    mapfile -t pkgs < <( fzf --reverse --header-lines=1 --multi --cycle --ansi --preview="$AUR_HELPER -Si {}" < "$AUR_LIST" )
    (( ${#pkgs[@]} > 0 )) && $AUR_HELPER -S "${pkgs[@]}"
}

fzf() {
  command fzf -e +s --multi --cycle --ansi \
    --bind='Ctrl-X:toggle-preview' \
    --no-hscroll --inline-info \
    --header='Ctrl-X for more info on a package' "$@"
}

remove () {
    case $1 in
      -s|--size) by_size=1; shift;
    esac

    if (( $# > 0 )); then
      sudo pacman -Rcusn "$@"
      exit
    fi

    if (( by_size )); then
      mapfile -t pkgs < <(expac -H M '%m\t%n' | sort -hr | fzf +s --reverse --multi --preview="pacman -Qil --color=always  {3}" -q ' ' | cut -f2)
    else
     mapfile -t pkgs < <(fzf --reverse --multi --preview="pacman -Qil {2}" \
       < <( pacman -Qs "$1" |
        gawk '{
           getline descr;
           sub(/ */,"", descr);
           descr = "[" descr "]";
           repo = "[" gensub(/\/.*/, "", 1) "]";
           name = gensub(/.*\//, "", 1, $1);
           info = gensub(/[^ ]* /, "", 1);
           print repo, name, descr;
         }'
       ) | cut -d' ' -f2)
   fi

    (( ${#pkgs[@]} > 0 )) && sudo pacman -Rcusn "${pkgs[@]}"
}

install() {
    if (( $# > 0 )); then
      sudo pacman -S "$@"
      exit
    fi

  mapfile -t pkgs < <(fzf --reverse --multi --preview="pacman -Si {2}" \
    < <( pacman -Ss "$1" |
     gawk '{
        getline descr;
        sub(/ */,"", descr);
        repo = "[" gensub(/\/.*/, "", 1) "]";
        name = gensub(/.*\//, "", 1, $1);
        info = gensub(/[^ ]* /, "", 1);
        print repo, name, info, descr;
      }'
    ) | cut -d' ' -f2)

    (( ${#pkgs[@]} > 0 )) && sudo pacman -S "${pkgs[@]}"
}

update(){
    aursync && $AUR_HELPER -Syu --combinedupgrade --save
}

case "$1" in
  h|help|-h|--help) usage; exit ;;
  install|in) install "${@:2}"; shift 2 ;;
  remove|rm) remove "${@:2}"; shift 2 ;;
  a|aur) aur "${@:2}"; shift 2 ;;
  as|aur-sync) aursync; shift 2 ;;
  -u|up|update) update; shift 2 ;;
  *) $AUR_HELPER "$@" ;;
esac
